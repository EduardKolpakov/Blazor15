@page "/studentdata"
@using BlazorApp1.Data
<PageTitle>Student's Data</PageTitle>
<div>Всего студентов  - @students.Count()</div>
<tr>
    <td>Фамилия</td>
    <td>Имя</td>
    <td>Отчество</td>
    <td>Фото</td>
    <td>Группа</td>
    <td>Дата рождения</td>
</tr>
<tr> 
    <td><input type="text" @bind="surname" /></td>
    <td><input type="text" @bind="name" /></td>
    <td><input type="text" @bind="otc" /></td>
    <td><input type="text" @bind="imagesr" /></td>
    <td><input type="number" @bind="group_n" /></td>
    <td><input type="date" @bind="bday" /></td>
</tr>
<input type="text" width="400px" @bind="errormsg" readonly="true"/>
<div><btn class="btn btn-primary" @onclick="addStudent">Добавить</btn></div>

<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Surname</th>
            <th>Name</th>
            <th>Patronymic</th>
            <th>Photo</th>
            <th>Group</th>
            <th>Birthday</th>
        </tr>
    </thead>
    <tbody>
        @foreach (Student stud in students)
        {
            <tr>
                <td>@stud.ID</td>
                <td>@stud.Surname</td>
                <td>@stud.Name</td>
                <td>@stud.Otch</td>
                @if (String.IsNullOrEmpty(stud.Image))
                {
                    <td><img src="Images/anon.png" width="100px" height="100px"/></td>
                }
                else
                {
                    <td><img src="@imageLink(stud.Image)" width="100px" height="100px" /></td>
                }
                <td>@stud.Group</td>
                <td>@stud.Birthday.ToShortDateString()</td>
                <td> <btn class="btn btn-primary" @onclick="e => DeleteStud(stud)"> Удалить </btn></td>
                <td> <btn class="btn btn-primary" @onclick="e => EditStud(stud)"> Редактировать </btn></td>
            </tr>
        }
    </tbody>
</table>

@code
{
    string errormsg = "ХИХИХИХАХАХА";
    List<Student> students = new List<Student> { };
    string surname = null;
    string name = null;
    string otc = null;
    string imagesr = null;
    string group_n = null;
    DateOnly bday;
    public string imageLink(string imgsrc)
    {
        if (imgsrc == "")
            return $"Images/anon.png";
        return $"Images/{imgsrc}";
    }
    public void addStudent()
    {
        while (true)
        {
            if (string.IsNullOrEmpty(surname) || string.IsNullOrEmpty(name) || string.IsNullOrEmpty(otc) || string.IsNullOrEmpty(group_n))
            {
                errormsg = "Пожалуйста, заполните данные!";
                break;
            }
            else
            {
                errormsg = "Студент добавлен!";
            }
            int id = Random.Shared.Next(0, 2000);
            Student st = new Student(id, surname, name, otc, imagesr, group_n, bday);
            students.Add(st);
            break;
        }
        surname = "";
        name = "";
        otc = "";
        imagesr = "";
        group_n = "";
        bday = DateOnly.MinValue;
    }
    public void DeleteStud(Student st)
    {
        students.Remove(st);
    }
    public void EditStud(Student st)
    {
        name = st.Name;
        surname = st.Surname;
        otc = st.Otch;
        imagesr = st.Image;
        group_n = st.Group;
        bday = st.Birthday;
        students.Remove(st);
    }
}